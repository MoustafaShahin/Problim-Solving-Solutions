#include<bits/stdc++.h>
using namespace std;
int t,n,m,blocked[1001],from,to;
vector<int> arr[1001];
int ans[1001];
struct node
{
    int ind , dis;
};
bool operator < (node a, node b)
{
    if(a.dis != b.dis) return a.dis < b.dis;
    return a.ind < b.ind;
}
set<node> S;
node cur , temp;
void dijstra()
{
    cur.ind=0;
    cur.dis=0;
    S.insert(cur);
    while(S.size())
    {
        cur = *S.begin();
        S.erase(S.begin());
           if(ans[cur.ind]!=-1)
           {continue;}
            ans[cur.ind] = cur.dis;
        for(int i=0;i<arr[cur.ind].size();i++)
        {
            temp.ind = arr[cur.ind][i];
            temp.dis = cur.dis + 1;
            S.insert(temp);
        }
    }
}
int main()
{
    cin>>t;
    while(t--)
    {
        cin>>n>>m;
        for(int i=1;i<n;i++)
        {cin>>blocked[i];}
        for(int i =0;i<m;i++)
        {
            cin>>from>>to;
             if(blocked[from] == 1 || blocked[to] == 1)
             {continue;}
            arr[from].push_back(to);arr[to].push_back(from);
        }
        memset(ans,-1,sizeof ans);
        memset(blocked,0,sizeof blocked);
        dijstra();
         for(int i=1; i<n; i++){cout << ans[i] << " ";}cout<<endl;
        for (int i=0; i<=n; i++) {arr[i].clear();}
    }
    return 0;
}
